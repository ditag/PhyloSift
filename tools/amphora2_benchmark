#!/usr/bin/env perl
use strict;
use warnings;

my $amphora2 = $ARGV[0];
my $report_path = $ARGV[1];

use lib "$ARGV[0]/lib";
use FindBin qw($Bin); use lib "$Bin/lib";
use Amphora2::Amphora2;
use Carp;
use Amphora2::Utilities qw(debug);
use Amphora2::Benchmark;

die "Usage: amphora2_benchmarks <path to amphora2> <path to report output>\n" if(@ARGV !=2);

my $a2 = new Amphora2::Amphora2();
$a2->readAmphora2Config();
Amphora2::Utilities::dataChecks($a2);

my @benchmark_data = (
["A simulated illumina dataset with 10 organisms","http://edhar.genomecenter.ucdavis.edu/~koadman/amphora2/accuracy/sim_illumina.fna"], 
["A simulated 454 dataset with 10 organisms","http://edhar.genomecenter.ucdavis.edu/~koadman/amphora2/accuracy/sim_454.fna"],
);

for(my $bI=0; $bI<@benchmark_data; $bI++){
	my $url = $benchmark_data[$bI][1];
	my $ff = File::Fetch->new(uri=>$url);
	my $seqname = $1 if $url =~ /.+\/(.+?)$/;
	$ff->fetch(to=>"./	");
	# run through the command-line just to test the interface as well
	print STDOUT "Running $amphora2/amphora2 all -f $seqname\n";
	system("$amphora2/amphora2 all -f $seqname");

	# now benchmark
	$a2->{"readsFile"} = $seqname;
	Amphora2::Benchmark::runBenchmark($a2, $report_path);
}

